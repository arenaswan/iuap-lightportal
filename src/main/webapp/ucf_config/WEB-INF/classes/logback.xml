<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<jmxConfigurator />
	<property name="log_name" value="iuap-lightportal"/>
	<property name="APP_Name" value="iuap-lightportal" />
	<contextName>${APP_Name}</contextName>
	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%cn代表输出在类附加到日志上的上下文名字即APP_Name，%thread表示线程名，%-5level：级别从左显示5个字符宽度，%X{ }来占位，从对应的MDC获取key的值，%msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%cn] [%X{call_thread_id}] [%X{current_user_name}] [%X{current_tenant_id}] [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- 按照每天生成日志文件 -->
	<appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>/var/logs/${APP_Name}/${APP_Name}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!--日志文件输出的文件名-->
			<FileNamePattern>/var/logs/${APP_Name}/%d{yyyy-MM-dd}/${APP_Name}.%i.log</FileNamePattern>
			<!--日志文件保留天数-->
			<MaxHistory>7</MaxHistory>
			<!-- 单个文件最大存储 -->
			<maxFileSize>100MB</maxFileSize>
			<!-- 总文件最大存储 -->
			<totalSizeCap>10GB</totalSizeCap>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%cn代表输出在类附加到日志上的上下文名字即APP_Name，%thread表示线程名，%-5level：级别从左显示5个字符宽度，%X{ }来占位，从对应的MDC获取key的值，%msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%cn] [%X{call_thread_id}] [%X{current_user_name}] [%X{current_tenant_id}] [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- 异步输出 -->
	<appender name ="ASYNC" class= "ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、ERROR、INFO级别的日志 -->
		<discardingThreshold >0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref ="FILE"/>
	</appender>
	<!--log4jdbc -->
	<logger name="jdbc.sqltiming" level="${log_level}"/>

	<!-- 自定义特殊包的日志级别 -->
	<logger name="com.yonyou.iuap" level="${log_level}" />

	<!-- 打印url映射关系 -->
	<logger name="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" level="${log_level}"/>
	<logger name="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" level="${log_level}"/>
	<logger name="org.springframework.web.servlet.mvc.method.annotation" level="${log_level}"/>


	<!-- 打印来源请求体和响应体的json数据 -->
	<logger name="org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor" level="${log_level}"/>
	<logger name="org.springframework.web.servlet.mvc.method.annotation" level="${log_level}"/>
	<logger name="org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor" level="${log_level}"/>
	<logger name="org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver" level="${log_level}"/>

	<!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
	<logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="${log_level}" />
	<logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="${log_level}" />
	<logger name="org.hibernate.SQL" level="${log_level}" />
	<logger name="org.hibernate.engine.QueryParameters" level="${log_level}" />
	<logger name="org.hibernate.engine.query.HQLQueryPlan" level="${log_level}" />

	<!--myibatis log configure-->
	<logger name="com.apache.ibatis" level="${log_level}"/>
	<logger name="java.sql.Connection" level="${log_level}"/>
	<logger name="java.sql.Statement" level="${log_level}"/>
	<logger name="java.sql.PreparedStatement" level="${log_level}"/>

	<root level="${log_level}">
		<!--<appender-ref ref="STDOUT" />-->
		<appender-ref ref="ASYNC" />
	</root>
</configuration>